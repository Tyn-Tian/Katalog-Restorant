{"version":3,"file":"app~7bd12dde.bundle.js","mappings":";0YACA,svNAIA,IAAQA,EAAuDC,EAAAA,EAAAA,cAAxCC,EAAwCD,EAAAA,EAAAA,iBAAtBE,EAAsBF,EAAAA,EAAAA,kBAEzDG,GAAYC,EAAAA,EAAAA,IAAOL,EAAeE,EAAkB,CACxDI,QAAO,SAACC,GACNA,EAASC,kBAAkBL,EAAmB,CAAEM,QAAS,MAC3D,IA4BF,QAzByB,CACjBC,cAAa,SAACC,GAAI,oGACjBA,EAAI,CAAF,gEAGOP,EAAS,uCAAEQ,IAAIT,EAAmBQ,IAAE,0CAJ5B,EAKxB,EAEME,iBAAgB,WAAG,iHACTT,EAAS,uCAAEU,OAAOX,IAAiB,0CAD1B,EAEzB,EAEMY,cAAa,SAACC,GAAY,oGACzBA,EAAWC,eAAe,MAAO,CAAF,gEAItBb,EAAS,uCAAEc,IAAIf,EAAmBa,IAAU,0CAL5B,EAMhC,EAEMG,iBAAgB,SAACR,GAAI,iHACXP,EAAS,8CAASD,EAAmBQ,IAAE,0CAD5B,EAE3B,gDC5BF,QALqB,CACnBS,SAAU,GAAF,OAAKnB,EAAAA,EAAAA,SAAe,QAC5BoB,OAAQ,SAACV,GAAE,gBAAQV,EAAAA,EAAAA,SAAe,kBAAUU,EAAE,sPCHhD,45NAeA,QAdyB,yBADzB,4FACyB,SADzB,QAMG,EALsB,EAWtB,OAZH,EACyB,OADzB,EACyB,gDACvB,sGACyBW,MAAMC,EAAAA,UAAsB,OAArC,OAARC,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,EAAaC,aAAW,2CAChC,0FAED,WAA8BhB,GAAE,yFACPW,MAAMC,EAAAA,OAAoBZ,IAAI,OAAvC,OAARa,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,EAAaV,YAAU,2CAC/B,+CAZH,6DAYG,EAXsB,mCCOzB,QATe,CACbY,SAAU,uCACVC,eAAgB,8CAChBC,YAAY,IAAIC,MAAOC,cACvBhC,cAAe,sBACfE,iBAAkB,EAClBC,kBAAmB,yECMf8B,gBAAM,IAAIC,EAAAA,EAAI,CAClBC,OAAQC,SAASC,cAAc,eAC/BC,OAAQF,SAASC,cAAc,eAC/BE,QAASH,SAASC,cAAc,aAChCG,cAAeJ,SAASK,iBAAiB,6BAG3CC,OAAOC,iBAAiB,cAAc,WACpCV,EAAIW,YACN,IAEAF,OAAOC,iBAAiB,QAAQ,WAC9BV,EAAIW,cACJC,EAAAA,EAAAA,IACF","sources":["webpack://restaurant-apps/./src/scripts/data/favorite-movie-idb.js","webpack://restaurant-apps/./src/scripts/globals/api-endpoint.js","webpack://restaurant-apps/./src/scripts/data/restaurant-source.js","webpack://restaurant-apps/./src/scripts/globals/config.js","webpack://restaurant-apps/./src/scripts/index.js"],"sourcesContent":["/* eslint-disable consistent-return */\r\n/* eslint-disable no-prototype-builtins */\r\nimport { openDB } from 'idb';\r\nimport CONFIG from '../globals/config';\r\n\r\nconst { DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME } = CONFIG;\r\n\r\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\r\n  upgrade(database) {\r\n    database.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\r\n  },\r\n});\r\n\r\nconst FavoriteMovieIdb = {\r\n  async getRestaurant(id) {\r\n    if (!id) {\r\n      return;\r\n    }\r\n    return (await dbPromise).get(OBJECT_STORE_NAME, id);\r\n  },\r\n\r\n  async getAllRestaurant() {\r\n    return (await dbPromise).getAll(OBJECT_STORE_NAME);\r\n  },\r\n\r\n  async putRestaurant(restaurant) {\r\n    if (!restaurant.hasOwnProperty('id')) {\r\n      return;\r\n    }\r\n    // eslint-disable-next-line consistent-return\r\n    return (await dbPromise).put(OBJECT_STORE_NAME, restaurant);\r\n  },\r\n\r\n  async deleteRestaurant(id) {\r\n    return (await dbPromise).delete(OBJECT_STORE_NAME, id);\r\n  },\r\n};\r\n\r\nexport default FavoriteMovieIdb;\r\n","import CONFIG from './config';\r\n\r\nconst API_ENDPOINT = {\r\n  ALL_LIST: `${CONFIG.BASE_URL}list`,\r\n  DETAIL: (id) => `${CONFIG.BASE_URL}detail/${id}`,\r\n};\r\n\r\nexport default API_ENDPOINT;\r\n","import API_ENDPOINT from '../globals/api-endpoint';\r\n\r\nclass TheRestaurantSource {\r\n  static async allListRestaurants() {\r\n    const response = await fetch(API_ENDPOINT.ALL_LIST);\r\n    const responseJson = await response.json();\r\n    return responseJson.restaurants;\r\n  }\r\n\r\n  static async detailRestaurant(id) {\r\n    const response = await fetch(API_ENDPOINT.DETAIL(id));\r\n    const responseJson = await response.json();\r\n    return responseJson.restaurant;\r\n  }\r\n}\r\n\r\nexport default TheRestaurantSource;\r\n","const CONFIG = {\r\n  BASE_URL: 'https://restaurant-api.dicoding.dev/',\r\n  BASE_IMAGE_URL: 'https://restaurant-api.dicoding.dev/images/',\r\n  CACHE_NAME: new Date().toISOString(),\r\n  DATABASE_NAME: 'restaurant-database',\r\n  DATABASE_VERSION: 1,\r\n  OBJECT_STORE_NAME: 'restaurants',\r\n};\r\n\r\nexport default CONFIG;\r\n","/* eslint-disable import/extensions */\nimport 'regenerator-runtime';\nimport '../styles/reset.scss';\nimport '../styles/main.scss';\nimport App from './views/app.js';\nimport swRegister from './utils/sw-register';\nimport 'lazysizes';\nimport 'lazysizes/plugins/parent-fit/ls.parent-fit';\n\nconst START = 10;\nconst NUMBER_OF_IMAGES = 100;\n\nconst app = new App({\n  navBtn: document.querySelector('.mobile-btn'),\n  navbar: document.querySelector('.navigation'),\n  content: document.querySelector('.restoran'),\n  accordionBtns: document.querySelectorAll('.accordion-item button'),\n});\n\nwindow.addEventListener('hashchange', () => {\n  app.renderPage();\n});\n\nwindow.addEventListener('load', () => {\n  app.renderPage();\n  swRegister();\n});\n"],"names":["DATABASE_NAME","CONFIG","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","getRestaurant","id","get","getAllRestaurant","getAll","putRestaurant","restaurant","hasOwnProperty","put","deleteRestaurant","ALL_LIST","DETAIL","fetch","API_ENDPOINT","response","json","responseJson","restaurants","BASE_URL","BASE_IMAGE_URL","CACHE_NAME","Date","toISOString","app","App","navBtn","document","querySelector","navbar","content","accordionBtns","querySelectorAll","window","addEventListener","renderPage","swRegister"],"sourceRoot":""}